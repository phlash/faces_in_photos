#! /usr/bin/env python

import os, sys
from pysqlite2 import dbapi2 as sqlite3
import xml.etree.ElementTree as et

# Open the DB
dbfile = 'faces.db'
if len(sys.argv)>1:
    dbfile = sys.argv[1]
if not os.path.isfile(dbfile):
    print "No such file: {}".format(dbfile)
    sys.exit(1)
db = sqlite3.connect(dbfile)
cur = db.cursor()
cur.execute('PRAGMA foreign_keys = ON')

# Load labels and groups
print "Loading labels & groups"
cur.execute('SELECT label, grp from face_groups ORDER BY label, grp')
cats = []
for row in cur:
    cat = (str(row[0]), row[1])
    cats.append(cat)

# Load face data
print "Loading face groupings"
cur.execute('SELECT grp, hash from face_data')
grps = {}
for row in cur:
    if row[0] in grps:
        grp = grps[row[0]]
    else:
        grp = []
        grps[row[0]] = grp
    if not (row[1] in grp):
        grp.append(row[1])
print "\t{} groups loaded".format(len(grps))

# Ensure there is a catalog file for each label & group
print "Building catalog files.."
ncnt = 0
ucnt = 0
for cat in cats:
    catname = cat[0] + '_' + str(cat[1])
    catfile = os.environ['HOME'] + '/.local/share/gthumb/catalogs/' + catname + '.catalog'
    tree = None
    fils = None
    if os.path.isfile(catfile):
        # open existing catalog, remove files
        tree = et.parse(catfile)
        root = tree.getroot()
        fils = root.find('files')
        root.remove(fils)
        fils = et.SubElement(root, 'files')
        ucnt += 1
    else:
        # Making a new catalog...
        root = et.Element('catalog')
        root.set('version', '1.0')
        tree = et.ElementTree(root)
        name = et.SubElement(root, 'name')
        name.text = catname
        fils = et.SubElement(root, 'files')
        ncnt += 1
    # Put in the files..
    fcnt = 0
    grp = grps[cat[1]]
    for hsh in grp:
        cur.execute('SELECT path from file_paths where hash = ?', (hsh,))
        for row in cur:
            path = str(row[0])
            fil = et.SubElement(fils, 'file')
            fil.set('uri', 'file://' + path)
            fcnt += 1
    # Save the catalog
    tree.write(catfile, encoding="UTF-8", xml_declaration=True)
    print "Saved {} files for label {} in group {}".format(fcnt, cat[0], cat[1])

print "Updated {} catalogs, created {}".format(ucnt, ncnt)
db.close()
